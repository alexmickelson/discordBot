services:
  editor:
    container_name: discord_bot_editor
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ../:/app
      - ~/.ssh:/home/developer/.ssh:ro
    environment:
      - DATABASE_URL=postgres://siteuser:postgresewvraer@db:5432/my_db
    command: |
      bash -c '
        tail -f /dev/null
      '
  client:
    container_name: discord_bot_client
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ../:/app
    working_dir: /app
    ports:
      - "127.0.0.1:5173:5173"
    entrypoint: sh
    command: |
      -c "
        cd /app/client
        pnpm install
        pnpm run dev --host
      "
  api:
    container_name: discord_bot_api
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ../:/app
    working_dir: /app
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:8000:8000" # mcp
    entrypoint: sh
    command: |
      -c "
        cd /app/api
        export PATH=/home/developer/.local/bin:$PATH
        uv sync
        PYTHONUNBUFFERED=1 uv run fastapi dev main.py --host 0.0.0.0 --port 8080
      "
  db:
    container_name: discord_bot_db
    image: timescale/timescaledb-ha:pg17
    environment:
      - POSTGRES_USER=siteuser
      - POSTGRES_PASSWORD=postgresewvraer
      - POSTGRES_DB=my_db
    volumes:
      # - db_data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/1-schema.sql:ro

volumes:
  db_data:
